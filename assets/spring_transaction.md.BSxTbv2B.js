import{_ as a,c as t,o as e,a4 as r}from"./chunks/framework.BZPRC472.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"spring/transaction.md","filePath":"spring/transaction.md","lastUpdated":1728608537000}'),i={name:"spring/transaction.md"},n=r('<h2 id="spring-事务" tabindex="-1">spring 事务 <a class="header-anchor" href="#spring-事务" aria-label="Permalink to &quot;spring 事务&quot;">​</a></h2><h2 id="事务隔离机制" tabindex="-1">事务隔离机制 <a class="header-anchor" href="#事务隔离机制" aria-label="Permalink to &quot;事务隔离机制&quot;">​</a></h2><ul><li>脏读 读取到没有提交到数据库的数据（读的是缓存）</li><li>不可重复读<br> 在同一个事务中，第一次和第二次读取的数据不一样</li><li>幻读 读到的数据是假的</li></ul><h2 id="事务超时时间-timeout-10" tabindex="-1">事务超时时间 timeout = 10 <a class="header-anchor" href="#事务超时时间-timeout-10" aria-label="Permalink to &quot;事务超时时间 timeout = 10&quot;">​</a></h2><p>最后一条 DML 语句的执行完的时间</p><h2 id="只读事务-readonly-true" tabindex="-1">只读事务 readonly = true <a class="header-anchor" href="#只读事务-readonly-true" aria-label="Permalink to &quot;只读事务 readonly = true&quot;">​</a></h2><p>spring 启动优化策略，提高 select 语句执行效率</p>',7),o=[n];function s(l,c,d,_,h,p){return e(),t("div",null,o)}const f=a(i,[["render",s]]);export{m as __pageData,f as default};
