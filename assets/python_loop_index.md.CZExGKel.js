import{_ as a,c as i,o as s,a4 as e}from"./chunks/framework.MxCO_SW-.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"python/loop/index.md","filePath":"python/loop/index.md","lastUpdated":1722992580000}'),l={name:"python/loop/index.md"},n=e(`<h2 id="while-循环" tabindex="-1">while 循环 <a class="header-anchor" href="#while-循环" aria-label="Permalink to &quot;while 循环&quot;">​</a></h2><ul><li>循环功能是程序中至关重要的基础</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 条件判断：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  执行逻辑</span></span></code></pre></div><h2 id="for-循环" tabindex="-1">for 循环 <a class="header-anchor" href="#for-循环" aria-label="Permalink to &quot;for 循环&quot;">​</a></h2><ul><li>while 循环的循环条件是自定义的，自行控制循环条件</li><li>for 循环是 轮训机制，是对内容的逐个处理</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">for 临时变量 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 待处理数据集</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  循环满足条件时执行的代码</span></span></code></pre></div><ul><li>range 获取数字序列</li><li>range(num1)</li><li>range(num1, num2)</li><li>range(num1, num2, step)</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>临时变量在规范上 不应该在 for 循环外部被访问</p></div><h2 id="循环中断-break-和-continue" tabindex="-1">循环中断 break 和 continue <a class="header-anchor" href="#循环中断-break-和-continue" aria-label="Permalink to &quot;循环中断 break 和 continue&quot;">​</a></h2><ul><li>continue 中断本次循环，直接进入下一次循环</li><li>break 循环结束</li></ul>`,10),t=[n];function o(h,p,r,c,d,k){return s(),i("div",null,t)}const g=a(l,[["render",o]]);export{_ as __pageData,g as default};
