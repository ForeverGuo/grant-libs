import{_ as a,c as i,o as n,a4 as l}from"./chunks/framework.BZPRC472.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"python/langchain/index.md","filePath":"python/langchain/index.md","lastUpdated":1736349088000}'),e={name:"python/langchain/index.md"},o=l('<h2 id="langchain-是什么" tabindex="-1">LangChain 是什么 ? <a class="header-anchor" href="#langchain-是什么" aria-label="Permalink to &quot;LangChain 是什么 ?&quot;">​</a></h2><h3 id="大语言模型的使用限制" tabindex="-1">大语言模型的使用限制 <a class="header-anchor" href="#大语言模型的使用限制" aria-label="Permalink to &quot;大语言模型的使用限制&quot;">​</a></h3><ol><li>单一任务执行 一问一答形式,不能同时处理多个任务和复杂任务链</li><li>特定数据的限制 由于隐私和安全问题,无法访问特定数据</li><li>模型调用的限制 只能使用 OpenAI 的预训练模型</li></ol><h3 id="why-langchain" tabindex="-1">Why LangChain ? <a class="header-anchor" href="#why-langchain" aria-label="Permalink to &quot;Why LangChain ?&quot;">​</a></h3><ol><li>市场认可和背书</li><li>灵活性优势 支持各种开源模型</li><li>发展可持续, 潜力巨大</li></ol><h3 id="未来构建智能代理的-3-种方式" tabindex="-1">未来构建智能代理的 3 种方式 <a class="header-anchor" href="#未来构建智能代理的-3-种方式" aria-label="Permalink to &quot;未来构建智能代理的 3 种方式&quot;">​</a></h3><ol><li>自定义开发</li><li>LangChain 这样的框架</li><li>OpenAI</li></ol><h3 id="main-component" tabindex="-1">main component <a class="header-anchor" href="#main-component" aria-label="Permalink to &quot;main component&quot;">​</a></h3><ol><li>Models(模型) 语言,聊天, 文本嵌入式模型</li><li>Memory(内存) 短期和长期记忆,用于存储和检索聊天记录</li><li>Agents(代理) <ul><li>扮演 推理引擎 的角色</li><li>能够根据给定的情境和数据做出合理的决策和推理</li></ul></li></ol>',9),t=[o];function h(r,c,d,s,_,m){return n(),i("div",null,t)}const g=a(e,[["render",h]]);export{u as __pageData,g as default};
